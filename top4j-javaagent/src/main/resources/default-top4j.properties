#=====================================
#
# Top4J JavaAgent configuration file
#
#=====================================
# stats collector poll frequency in ms
#=====================================
collector.poll.frequency=60000
#========================================
# stats logger queue poll timeout in secs
#========================================
stats.logger.poll.timeout=600
#========================================
# stats logger on/off switch
#========================================
stats.logger.enabled=false
#========================================
# stats.logger.format:
#   csv or console
#   csv = comma separated values, one log file per stats type (change field separator via stats.logger.field.separator)
#   console = log stats to console via java.util.logging.LoggerThread.info() method
#========================================
stats.logger.format=csv
#========================================
# stats log directory
#========================================
stats.logger.directory=top4j-stats
#========================================
# stats logger log file name date stamp format
#  - the datestamp that appears within the stats log file name
#========================================
stats.logger.log.file.name.date.format=yyyyMMdd
#========================================
# stats logger date stamp format
#========================================
stats.logger.date.format=yyyy-MM-dd'T'HH:mm:ss.SSSZ
#========================================
# stats logger field separator
#========================================
stats.logger.field.separator=,
#==============================================
# top threads stack trace logging on/off switch
#==============================================
top.threads.stack.trace.logging.enabled=true
#==================================================
# top threads stack trace CPU util threshold
#  - log stack trace if CPU util threshold exceeded
#==================================================
top.threads.stack.trace.cpu.threshold=10
#=============================================
# the number of top thread stack frames to log
#=============================================
top.threads.stack.trace.frames=10
#=====================================
# use this logger.format for debugging
#=====================================
#logger.format=%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$s %2$s: %5$s%6$s%n
#======================================
# use this logger.format for production
#======================================
logger.format=%4$s  %1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS Top4J JavaAgent: %5$s%6$s%n
#===========================================================================
# top thread count - the number of top threads to track via TopThread MBean
#===========================================================================
top.thread.count=5
#===========================================================================
# thread contention monitoring on/off switch
#===========================================================================
thread.contention.monitoring.enabled=true
#=======================================================================================
# blocked thread count - the number of blocked threads to track via BlockedThread MBean
#=======================================================================================
blocked.thread.count=5
#==================================================
# blocked threads stack trace logging on/off switch
#==================================================
blocked.threads.stack.trace.logging.enabled=true
#==================================================
# blocked threads stack trace blocked percentage threshold
#  - log stack trace if blocked percentage threshold exceeded
#==================================================
blocked.threads.stack.trace.blocked.percentage.threshold=10
#==================================================
# the number of blocked thread stack frames to log
#==================================================
blocked.threads.stack.trace.frames=10
#=========================================
# log properties on start up on/off switch
#=========================================
log.properties.on.startup=false
#===========================================================================
# hot method profiling on/off switch
#===========================================================================
hot.method.profiling.enabled=true
#=========================================
# hot method profiler poll frequency in ms
#=========================================
hot.method.poll.frequency=1000
#=======================================================================================
# hot method count - the number of hot methods to track via HotMethod MBean
#=======================================================================================
hot.method.count=5
#==================================================
# hot method stack trace logging on/off switch
#==================================================
hot.method.stack.trace.logging.enabled=true
#==================================================
# hot method stack trace load profile percentage threshold
#  - log stack trace if load profile percentage threshold exceeded
#==================================================
hot.method.stack.trace.load.profile.percentage.threshold=10
#==================================================
# the number of hot method stack frames to log
#==================================================
hot.method.stack.trace.frames=10
#==================================================
# thread usage cache on/off switch
#  - the thread usage cache is a performance enhancement used to store the top thread IDs by usage (CPU and blocked time)
#    so that only the threads with a history of high CPU usage or thread contention are updated on each thread usage update
#==================================================
thread.usage.cache.enabled=false
#==================================================
# thread usage cache size
#  - the maximum number of thread IDs contained within the thread usage cache
#==================================================
thread.usage.cache.size=500
#==================================================
# thread usage cache time-to-live
#  - the length of time before the thread usage cache expires and is refreshed on the next thread usage update
#==================================================
thread.usage.cache.ttl=15000
#==================================================
# internal thread scan limit
#  - the maximum thread id to check for additional (system) threads not returned by ThreadMXBean.getAllThreadIds();
#    0 = disabled.
#  (Some internal threads (eg code compiler) will likely be found with thread ids in the range 1-20, so
#  thread.internal.scan.limit=20 is suggested)
#==================================================
thread.internal.scan.limit=0
