#!/bin/bash
#
# top4j
#
#  - Top4J wrapper script
#
#    Arguments:
#
#      1. JVM_PID (optional): The JVM process ID to attach to
#
#    Example Usage:
#
#      Run the top4j wrapper script with no arguments to auto-detect running JVMs and select the appropriate JVM from a numbered list....
#
#        ./top4j
#
#      Alternatively, if you alreday know the JVM PID, you can specify it on the command line....
#
#        ./top4j 468
#
#    Environment Variable Prerequisites:
#
#      JAVA_HOME       Must point at your Java Development Kit installation.
#

JVM_PID=$1
INSTALL_DIR=`dirname $BASH_SOURCE`
TOP4J_JAR=`ls -t ${INSTALL_DIR}/top4j-cli-[0-9]*.[0-9]*.[0-9]*.jar  | head -1`
# NOTE: Override JAVA_HOME here if it's not part of the local runtime environment
#JAVA_HOME=/usr/java/jdk1.8.0_60
JAVA_BIN_DIR=${JAVA_HOME}/bin
JAVA_LIB_DIR=${JAVA_HOME}/lib
JAVA=${JAVA_BIN_DIR}/java
TOOLS_JAR=${JAVA_LIB_DIR}/tools.jar

# check JAVA_HOME
if [[ -z ${JAVA_HOME} ]]
then
	echo "ERROR: JAVA_HOME environment variable NOT defined."
	echo "HINT: A Java JDK installation is required to run this program. Please set JAVA_HOME env var to a local JDK installation location."
	exit 1
fi

# check JAVA
if [[ ! -x ${JAVA} ]]
then
	echo "ERROR: Java command not found under configured JAVA_HOME bin directory - ${JAVA_BIN_DIR}"
	echo "HINT: A Java JDK installation is required to run this program. Please set JAVA_HOME env var to a local JDK installation location."
	exit 1
fi

# check TOP4J_JAR
if [[ ! -f ${TOP4J_JAR} ]]
then
	echo "ERROR: Top4j jar not found under top4j INSTALL_DIR location - ${INSTALL_DIR}"
	exit 1
fi

# check TOOLS_JAR
if [[ ! -f ${TOOLS_JAR} ]]
then
	echo "ERROR: JDK tools.jar not found under JAVA_HOME lib directory - ${JAVA_LIB_DIR}."
	echo "HINT: A Java JDK installation is required to run this program. Please set JAVA_HOME env var to a local JDK installation location."
	exit 1
fi


# launch top4j against JVM_PID
${JAVA} -jar ${TOP4J_JAR} ${JVM_PID}

